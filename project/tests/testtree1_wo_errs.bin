(sourceUnit (pragmaDirective pragma (pragmaName (identifier solidity)) (pragmaValue (version (versionConstraint (versionOperator ^) 0.4.10))) ;) (contractDefinition contract (identifier AbstractSweeper) { (contractPart (functionDefinition function (identifier sweep) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier token)) , (parameter (typeName (elementaryTypeName uint)) (identifier amount)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName bool))) ))) ;)) (contractPart (functionDefinition function (parameterList ( )) modifierList (block { (statement (throwStatement throw ;)) }))) (contractPart (stateVariableDeclaration (typeName (userDefinedTypeName (identifier Controller))) (identifier controller) ;)) (contractPart (functionDefinition function (identifier AbstractSweeper) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _controller)) )) modifierList (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier controller))) = (expression (expression (primaryExpression (identifier Controller))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier _controller))))) ))) ;))) }))) (contractPart (modifierDefinition modifier (identifier canSweep) (parameterList ( )) (block { (statement (ifStatement if ( (expression (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (expression (expression (primaryExpression (identifier controller))) . (identifier authorizedCaller)) ( functionCallArguments ))) && (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (expression (expression (primaryExpression (identifier controller))) . (identifier owner)) ( functionCallArguments )))) ) (statement (throwStatement throw ;)))) (statement (ifStatement if ( (expression (expression (expression (primaryExpression (identifier controller))) . (identifier halted)) ( functionCallArguments )) ) (statement (throwStatement throw ;)))) (statement (simpleStatement (expressionStatement (expression (primaryExpression (identifier _))) ;))) }))) }) (contractDefinition contract (identifier Token) { (contractPart (functionDefinition function (identifier balanceOf) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier a)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier a))) )) ;))) (statement (returnStatement return (expression (primaryExpression (numberLiteral 0))) ;)) }))) (contractPart (functionDefinition function (identifier transfer) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier val)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName bool))) ))) (block { (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier a))) )) ;))) (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier val))) )) ;))) (statement (returnStatement return (expression (primaryExpression false)) ;)) }))) }) (contractDefinition contract (identifier DefaultSweeper) is (inheritanceSpecifier (userDefinedTypeName (identifier AbstractSweeper))) { (contractPart (functionDefinition function (identifier DefaultSweeper) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier controller)) )) (modifierList (modifierInvocation (identifier AbstractSweeper) ( (expressionList (expression (primaryExpression (identifier controller)))) ))) (block { }))) (contractPart (functionDefinition function (identifier sweep) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _token)) , (parameter (typeName (elementaryTypeName uint)) (identifier _amount)) )) (modifierList (modifierInvocation (identifier canSweep))) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName bool))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName bool)) (identifier success)) = (expression (primaryExpression false)) ;))) (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName address)) (identifier destination)) = (expression (expression (expression (primaryExpression (identifier controller))) . (identifier destination)) ( functionCallArguments )) ;))) (statement (ifStatement if ( (expression (expression (primaryExpression (identifier _token))) != (expression (expression (primaryExpression (elementaryTypeNameExpression (elementaryTypeName address)))) ( (functionCallArguments (expressionList (expression (primaryExpression (numberLiteral 0))))) ))) ) (statement (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (userDefinedTypeName (identifier Token))) (identifier token)) = (expression (expression (primaryExpression (identifier Token))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier _token))))) )) ;))) (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier amount)) = (expression (primaryExpression (identifier _amount))) ;))) (statement (ifStatement if ( (expression (expression (primaryExpression (identifier amount))) > (expression (expression (expression (primaryExpression (identifier token))) . (identifier balanceOf)) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier this))))) ))) ) (statement (block { (statement (returnStatement return (expression (primaryExpression false)) ;)) })))) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier success))) = (expression (expression (expression (primaryExpression (identifier token))) . (identifier transfer)) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier destination))) , (expression (primaryExpression (identifier amount))))) ))) ;))) })) else (statement (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier amountInWei)) = (expression (primaryExpression (identifier _amount))) ;))) (statement (ifStatement if ( (expression (expression (primaryExpression (identifier amountInWei))) > (expression (expression (primaryExpression (identifier this))) . (identifier balance))) ) (statement (block { (statement (returnStatement return (expression (primaryExpression false)) ;)) })))) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier success))) = (expression (expression (expression (primaryExpression (identifier destination))) . (identifier send)) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier amountInWei))))) ))) ;))) })))) (statement (ifStatement if ( (expression (primaryExpression (identifier success))) ) (statement (block { (statement (simpleStatement (expressionStatement (expression (expression (expression (primaryExpression (identifier controller))) . (identifier logSweep)) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier this))) , (expression (primaryExpression (identifier destination))) , (expression (primaryExpression (identifier _token))) , (expression (primaryExpression (identifier _amount))))) )) ;))) })))) (statement (returnStatement return (expression (primaryExpression (identifier success))) ;)) }))) }) (contractDefinition contract (identifier UserWallet) { (contractPart (stateVariableDeclaration (typeName (userDefinedTypeName (identifier AbstractSweeperList))) (identifier sweeperList) ;)) (contractPart (functionDefinition function (identifier UserWallet) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _sweeperlist)) )) modifierList (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier sweeperList))) = (expression (expression (primaryExpression (identifier AbstractSweeperList))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier _sweeperlist))))) ))) ;))) }))) (contractPart (functionDefinition function (parameterList ( )) (modifierList public (stateMutability payable)) (block { }))) (contractPart (functionDefinition function (identifier tokenFallback) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _from)) , (parameter (typeName (elementaryTypeName uint)) (identifier _value)) , (parameter (typeName (elementaryTypeName bytes)) (identifier _data)) )) modifierList (block { (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier _from))) )) ;))) (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier _value))) )) ;))) (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier _data))) )) ;))) }))) (contractPart (functionDefinition function (identifier sweep) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _token)) , (parameter (typeName (elementaryTypeName uint)) (identifier _amount)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName bool))) ))) (block { (statement (simpleStatement (expressionStatement (expression ( (expression (primaryExpression (identifier _amount))) )) ;))) (statement (returnStatement return (expression (expression (expression (expression (expression (primaryExpression (identifier sweeperList))) . (identifier sweeperOf)) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier _token))))) )) . (identifier delegatecall)) ( (functionCallArguments (expressionList (expression (expression (primaryExpression (identifier msg))) . (identifier data)))) )) ;)) }))) }) (contractDefinition contract (identifier AbstractSweeperList) { (contractPart (functionDefinition function (identifier sweeperOf) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _token)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName address))) ))) ;)) }) (contractDefinition contract (identifier Controller) is (inheritanceSpecifier (userDefinedTypeName (identifier AbstractSweeperList))) { (contractPart (stateVariableDeclaration (typeName (elementaryTypeName address)) public (identifier owner) ;)) (contractPart (stateVariableDeclaration (typeName (elementaryTypeName address)) public (identifier authorizedCaller) ;)) (contractPart (stateVariableDeclaration (typeName (elementaryTypeName address)) public (identifier destination) ;)) (contractPart (stateVariableDeclaration (typeName (elementaryTypeName bool)) public (identifier halted) ;)) (contractPart (eventDefinition event (identifier LogNewWallet) (eventParameterList ( (eventParameter (typeName (elementaryTypeName address)) (identifier receiver)) )) ;)) (contractPart (eventDefinition event (identifier LogSweep) (eventParameterList ( (eventParameter (typeName (elementaryTypeName address)) indexed (identifier from)) , (eventParameter (typeName (elementaryTypeName address)) indexed (identifier to)) , (eventParameter (typeName (elementaryTypeName address)) indexed (identifier token)) , (eventParameter (typeName (elementaryTypeName uint)) (identifier amount)) )) ;)) (contractPart (modifierDefinition modifier (identifier onlyOwner) (parameterList ( )) (block { (statement (ifStatement if ( (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (primaryExpression (identifier owner)))) ) (statement (throwStatement throw ;)))) (statement (simpleStatement (expressionStatement (expression (primaryExpression (identifier _))) ;))) }))) (contractPart (modifierDefinition modifier (identifier onlyAuthorizedCaller) (parameterList ( )) (block { (statement (ifStatement if ( (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (primaryExpression (identifier authorizedCaller)))) ) (statement (throwStatement throw ;)))) (statement (simpleStatement (expressionStatement (expression (primaryExpression (identifier _))) ;))) }))) (contractPart (modifierDefinition modifier (identifier onlyAdmins) (parameterList ( )) (block { (statement (ifStatement if ( (expression (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (primaryExpression (identifier authorizedCaller)))) && (expression (expression (expression (primaryExpression (identifier msg))) . (identifier sender)) != (expression (primaryExpression (identifier owner))))) ) (statement (throwStatement throw ;)))) (statement (simpleStatement (expressionStatement (expression (primaryExpression (identifier _))) ;))) }))) (contractPart (functionDefinition function (identifier Controller) (parameterList ( )) modifierList (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier owner))) = (expression (expression (primaryExpression (identifier msg))) . (identifier sender))) ;))) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier destination))) = (expression (expression (primaryExpression (identifier msg))) . (identifier sender))) ;))) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier authorizedCaller))) = (expression (expression (primaryExpression (identifier msg))) . (identifier sender))) ;))) }))) (contractPart (functionDefinition function (identifier changeAuthorizedCaller) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _newCaller)) )) (modifierList (modifierInvocation (identifier onlyOwner))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier authorizedCaller))) = (expression (primaryExpression (identifier _newCaller)))) ;))) }))) (contractPart (functionDefinition function (identifier changeDestination) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _dest)) )) (modifierList (modifierInvocation (identifier onlyOwner))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier destination))) = (expression (primaryExpression (identifier _dest)))) ;))) }))) (contractPart (functionDefinition function (identifier changeOwner) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _owner)) )) (modifierList (modifierInvocation (identifier onlyOwner))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier owner))) = (expression (primaryExpression (identifier _owner)))) ;))) }))) (contractPart (functionDefinition function (identifier makeWallet) (parameterList ( )) (modifierList (modifierInvocation (identifier onlyAdmins))) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier wallet)) ))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier wallet))) = (expression (expression (primaryExpression (elementaryTypeNameExpression (elementaryTypeName address)))) ( (functionCallArguments (expressionList (expression (expression new (typeName (userDefinedTypeName (identifier UserWallet)))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier this))))) )))) ))) ;))) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier LogNewWallet))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier wallet))))) )) ;))) }))) (contractPart (functionDefinition function (identifier halt) (parameterList ( )) (modifierList (modifierInvocation (identifier onlyAdmins))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier halted))) = (expression (primaryExpression true))) ;))) }))) (contractPart (functionDefinition function (identifier start) (parameterList ( )) (modifierList (modifierInvocation (identifier onlyOwner))) (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier halted))) = (expression (primaryExpression false))) ;))) }))) (contractPart (stateVariableDeclaration (typeName (elementaryTypeName address)) public (identifier defaultSweeper) = (expression (expression (primaryExpression (elementaryTypeNameExpression (elementaryTypeName address)))) ( (functionCallArguments (expressionList (expression (expression new (typeName (userDefinedTypeName (identifier DefaultSweeper)))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier this))))) )))) )) ;)) (contractPart (stateVariableDeclaration (typeName (mapping mapping ( (elementaryTypeName address) => (typeName (elementaryTypeName address)) ))) (identifier sweepers) ;)) (contractPart (functionDefinition function (identifier addSweeper) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _token)) , (parameter (typeName (elementaryTypeName address)) (identifier _sweeper)) )) (modifierList (modifierInvocation (identifier onlyOwner))) (block { (statement (simpleStatement (expressionStatement (expression (expression (expression (primaryExpression (identifier sweepers))) [ (expression (primaryExpression (identifier _token))) ]) = (expression (primaryExpression (identifier _sweeper)))) ;))) }))) (contractPart (functionDefinition function (identifier sweeperOf) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier _token)) )) modifierList (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName address))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName address)) (identifier sweeper)) = (expression (expression (primaryExpression (identifier sweepers))) [ (expression (primaryExpression (identifier _token))) ]) ;))) (statement (ifStatement if ( (expression (expression (primaryExpression (identifier sweeper))) == (expression (primaryExpression (numberLiteral 0)))) ) (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier sweeper))) = (expression (primaryExpression (identifier defaultSweeper)))) ;))))) (statement (returnStatement return (expression (primaryExpression (identifier sweeper))) ;)) }))) (contractPart (functionDefinition function (identifier logSweep) (parameterList ( (parameter (typeName (elementaryTypeName address)) (identifier from)) , (parameter (typeName (elementaryTypeName address)) (identifier to)) , (parameter (typeName (elementaryTypeName address)) (identifier token)) , (parameter (typeName (elementaryTypeName uint)) (identifier amount)) )) modifierList (block { (statement (simpleStatement (expressionStatement (expression (expression (primaryExpression (identifier LogSweep))) ( (functionCallArguments (expressionList (expression (primaryExpression (identifier from))) , (expression (primaryExpression (identifier to))) , (expression (primaryExpression (identifier token))) , (expression (primaryExpression (identifier amount))))) )) ;))) }))) }) <EOF>)